openapi: "3.0.0"
info:
  version: 3.1.0
  title: Electricity Map API Documentation
  description: |-
    Welcome to the Electricity Map API! You can use our API to get access to information about:
    
      * where the electricity in a specific area comes from 
      * how much carbon was emitted to produce it. 
      
    Furthermore, you can use this API to get historical data, live data and forecasts. If you have any questions, or are interested in getting access to our API, you can look at our offerings on api.electricitymap.org, or contact us:
  #termsOfService: http://swagger.io/terms/
  contact:
    name: Electricity Map
    email: api@electricitymap.org
    url: http://electricitymap.org
  x-logo:
    url: "http://static.electricitymap.org/api/docs/images/logo.png"
    backgroundColor: "#FFFFFF"
    altText: "electricityMap logo"
#  license:
#    name: Apache 2.0
#    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://api.electricitymap.org
tags:
  - name: zones
    description: |
      Get zone related information
  - name: Carbon Intensity
    description: |
      Access latest, historical and forecasted carbon intensity data
  - name: Power Production
    description: |
      Access latest, historical and forecasted power production data
  - name: Power Consumption
    description: |
      Access latest, historical and forecasted power consumption data
  - name: Power Breakdown
    description: |
      Access latest, historical and forecasted power breakdown data
  - name: Marginal Forecasts
    description: |
      Access forecasted marginal power consumption and carbon intensity data
paths:
  /carbon-intensity/latest:
    get:
      tags: 
        - Carbon Intensity
      summary: Get live carbon intensity
      description: |-
        This endpoint retrieves the last known carbon intensity (in gCO2eq/kWh) of electricity consumed in an area.
        
        It can either be queried by zone identifier or by geolocation (latitude and longitude).
      operationId: getLatestCarbonIntensity
      parameters:
        - $ref: '#/components/parameters/zone'
        - $ref: '#/components/parameters/lat'
        - $ref: '#/components/parameters/lon'  
      x-code-samples:
        - lang: Shell
          source: |- 
            curl 'https://api.electricitymap.org/v3/carbon-intensity/latest?zone=DE' -H 'auth-token: myapitoken'
        - lang: python
          source: |- 
            import requests
            r = requests.get('https://api.electricitymap.org/v3/carbon-intensity/latest?zone=DE', headers={'auth-token':'myapitoken'})
            r.status_code, r.content

      responses:
        200:
          description: Live carbon intensity for specified zone
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone'
                  - $ref: '#/components/schemas/carbonIntensity'
                  - $ref: '#/components/schemas/datetime'
                  - $ref: '#/components/schemas/updatedAt'
        400:
          $ref: '#/components/responses/error400'
        401: 
          $ref: '#/components/responses/error401Forbidden'
        404:
          $ref: '#/components/responses/error404zone'
        500:
          $ref: '#/components/responses/error500unknown'
      security:
        - ApiKeyAuth: []
                
  /power-production-breakdown/latest:
    get:
      tags: 
        - Power Production
      summary: Get live power production intensity
      description: |
        This endpoint retrieves the last known electricity production in the zone, broken down by production type. It can either be queried by zone identifier or by geolocation.
      operationId: getLatestPowerProductionBreakdown
      parameters:
        - $ref: '#/components/parameters/zone'
        - $ref: '#/components/parameters/lat'
        - $ref: '#/components/parameters/lon'
      responses:
        200:
          description: Live power production breakdown for specified zone
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone'
                  - $ref: '#/components/schemas/datetime'
                  - $ref: '#/components/schemas/powerProductionBreakdown'
                  - $ref: '#/components/schemas/fossilFreePercentage'
                  - $ref: '#/components/schemas/renewablePercentage'
                  - $ref: '#/components/schemas/updatedAt'
        400:
          $ref: '#/components/responses/error400'
        401: 
          $ref: '#/components/responses/error401Forbidden'
        404:
          $ref: '#/components/responses/error404zone'
        500:
          $ref: '#/components/responses/error500unknown'

components:

  securitySchemes:
    ApiKeyAuth:
      description: |
        The API key should be included as a header in all requests:
        auth-token: myapitoken
        (replace 'myapitoken' with your token)
      type: apiKey
      in: header
      name: auth-token

  parameters:
    zone: 
      in: query
      name: zone
      required: false
      schema:
        type: string
      description:
        The zone key. Required if latitude and longitude are not specified.
    lat: 
      in: query
      name: lat
      required: false
      schema:
        type: string
      description:
        The latitude of the location. Must be specified with the 'lon' parameter. If the latitude and longitude are specified instead of the zone, the zone will be determined automatically from the geographical location. Required if zone is not specified.
    lon: 
      in: query
      name: lon
      required: false
      schema:
        type: string
      description:
        The longitude of the location. Must be specified with the 'lat' parameter. If the latitude and longitude are specified instead of the zone, the zone will be determined automatically from the geographical location.
        
  examples:
    carbonIntensity: 
      value: 10

  schemas:
    zone:
      type: object
      properties:
        zone:
          type: string
          example: DE
          
    carbonIntensity:
      type: object
      properties:
        carbonIntensity:
          type: integer
          format: int64
          example: 302
          
    datetime:
      type: object
      properties:
        datetime:
          type: string
          format: date-time
          example: '2018-04-25T18:07:00.350Z'
          
    updatedAt:
      type: object
      properties:
        updatedAt:
          type: string
          format: date-time
          example: '2018-04-25T18:07:01.000Z'
          
    powerProductionBreakdown:
      type: object
      properties:
        powerProductionBreakdown:
          type: object
          properties:
            biomass:
              type: integer
              example: 666
            coal:
              type: integer
              example: 200
            solar:
              type: integer
              example: 200
            nuclear:
              type: integer
              example: 200
            hydro:
              type: integer
              example: 200
            wind:
              type: integer
              example: 200
            gas:
              type: integer
              example: 200
            geothermal:
              type: integer
              example: 200
          
    powerProductionTotal:
      type: object
      properties:
        powerProductionTotal:
          type: integer
          example: 1324
          
    fossilFreePercentage:
      type: object
      properties:
        fossilFreePercentage:
          type: integer
          example: 61
          
    renewablePercentage:
      type: object
      properties:
        renewablePercentage:
          type: integer
          example: 61
    
        
  responses:
    error400:  
      description: Something wrong with the request. For example, if a required parameter was not supplied or is invalid.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: error message
                example: 'Zone "OZ" does not exist'
    error401Forbidden:
      description: Forbidden. API key not recognized for this request.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: error message
                example: 'Invalid auth-token'
    error404zone:  
      description: zone not valid for this request type (but may be in the future). 
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: error message
                example: "Zone 'RU' does not have a forecast for 'carbon-intensity'"
    error500unknown:  
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: error message
                example: 'Internal Server Error'
